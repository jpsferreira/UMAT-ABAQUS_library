#-*- mode: python -*-

####################################################################################
#                                                                                  #
#     Compile and Link commands for ABAQUS on the Linux 64-bit Platform            #
#                                                                                  #
####################################################################################

import os, re, glob, driverUtils

usub_lib_dir = os.getcwd()#+"/lib"
print(usub_lib_dir)

fortCmd = "ifort"   # <-- Fortran compiler
cppCmd  = "g++"     # <-- C++ compiler

# Location of the /include directory in the ABAQUS installation
abaHomeInc = os.path.abspath(os.path.join(os.environ.get('ABA_HOME', ''), os.pardir)) 

# Avoid signal trapping by the Fortran RTE
os.environ["FOR_IGNORE_EXCEPTIONS"] = "1"
# Disable messages from the Fotran RTE
os.environ["FOR_DISABLE_STACK_TRACE"] = "1"

# Do not let QLogic InfiniPath driver set processor affinity.
os.environ["IPATH_NO_CPUAFFINITY"] = "1"

usub_lib_dir = os.getcwd()

## Fortran compile command for User Subroutines

# '-free'  --  use free-format FORTRAN 90 syntax.

compile_fortran = [fortCmd,
                   '-V',
                   '-free',
                   '-c', '-fpp','-fPIC','-extend_source',
                   '-DABQ_LNX86_64', '-DABQ_FORTRAN',
                   '-auto',    # <-- important for thread-safety of parallel user subroutines
                   '-pc64',                  # set FPU precision to 53 bit significand
                   '-align', 'array64byte',
                   '-prec-div', '-prec-sqrt',# improve precision of FP divides and sqrt
                   '-fp-model', 'precise',   # floating point model: precise
                   '-fimf-arch-consistency=true', # math library consistent results
                   '-mP2OPT_hpo_vec_divbyzero=F',
                   '-no-fma',                # disable floating point fused multiply-add
                   '-fp-speculation=safe',   # floating point speculations only when safe
                   '-fprotect-parens',       # honor parenthesis during expression evaluation
                   '-fstack-protector-strong', # enable stack overflow protection checks
                   '-reentrancy', 'threaded',  # important for thread-safety
                   #'-init=zero','-init=arrays',  # automatically initialize all arrays to zero
                   #'-init=snan', '-init=arrays', # automatically initialize all arrays to SNAN
                   '-msse3',                      # generate SSE3, SSE2, and SSE instructions
                   '-axcore-avx2,avx',    
                   '-WB', '-I%I', '-I'+abaHomeInc, '%P']

# Additional command-line options for the Intel C/C++ Compilers:
# '-cxx', '-Kc++eh', '-Krtti', '-Kc++', '-pc64', '-restrict', '-shared-intel',
# '-we1011', '-we120',  '-we117', '-we556', '-we144', '-we268', '-we1224', '-we167', '-we880'

compile_cpp = [cppCmd,
               '-c', '-fPIC', '-w', '-Wno-deprecated', '-DTYPENAME=typename',
               '-D_LINUX_SOURCE', '-DABQ_LINUX', '-DABQ_LNX86_64', '-DSMA_GNUC',
               '-DFOR_TRAIL', '-DHAS_BOOL', '-DASSERT_ENABLED',
               '-D_BSD_TYPES', '-D_BSD_SOURCE', '-D_GNU_SOURCE',
               '-D_POSIX_SOURCE', '-D_XOPEN_SOURCE_EXTENDED', '-D_XOPEN_SOURCE',
               '-DHAVE_OPENGL', '-DHKS_OPEN_GL',  '-DGL_GLEXT_PROTOTYPES',
               '-DMULTI_THREADING_ENABLED', '-D_REENTRANT',
               '-DABQ_MPI_SUPPORT', '-DBIT64', '-D_LARGEFILE64_SOURCE', '-D_FILE_OFFSET_BITS=64', '%P',
               '-I/home/jferreira/libtorch/include',               
               # '-O0', # <-- Optimization level
               # '-g',  # <-- Debug symbols
               '-I%I', '-I'+abaHomeInc]

compile_fmu = [cppCmd,
               '-c', '-fPIC','-I%I', '-I'+abaHomeInc]

link_fmu = [cppCmd,
            '-fPIC', '-shared', '-o', '%J', '%M']

link_sl = [fortCmd,
           '-V',           
           '-cxxlib', '-fPIC', '-threads', '-shared','-Wl,--add-needed', 
           '%E', '-Wl,-soname,%U', '-o', '%U', '%F', '%A', '%L', '%B', '-parallel',           
           '-Wl,-Bdynamic', '-shared-intel',]

link_exe = [cppCmd,
            '-fPIC',
            '-Wl,-Bdynamic', '-Wl,--add-needed', '-o', '%J', '%F', '%M', '%L', '%B', '%O']

#-Wl,--copy-dt-needed-entries future replacement for -Wl,--add-needed


# Remove the temporary names from the namespace
del cppCmd
del fortCmd
del abaHomeInc

# Avoid CAE display issues due to compositing window animations
if 'XLIB_SKIP_ARGB_VISUALS' not in os.environ:
    os.environ['XLIB_SKIP_ARGB_VISUALS'] = '1'
